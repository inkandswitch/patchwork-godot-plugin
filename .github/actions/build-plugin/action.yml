name: Godot Patchwork Plugin Build
description: Build Godot plugin for Patchwork.

inputs:
  arch:
    required: true
    default: ''
    description: Rust target platform.
  extra_flags:
    required: false
    default: ''
    description: Rust extra flags.
  features:
    required: false
    default: ''
    description: simd-nightly,simd-stable,parallel,enhanced-determinism
  
runs:
  using: composite
  steps:
    - name: Show targets
      shell: sh
      run: |
        rustc --print=target-list
    - name: Rust Add target
      shell: sh
      run: |
        rustup target add ${{ inputs.arch }}
    #--features="${{ inputs.features }}" --no-default-features
    - name: Build
      shell: sh
      run: |
        cargo build --target=${{ inputs.arch }} --release  ${{ inputs.extra_flags}}
    - name: Copy to release
      shell: sh
      run: |
        mkdir -p rust/plugin/target/release
        rm -rf rust/plugin/target/release
        cp -rf rust/plugin/target/${{ inputs.arch }}/release rust/plugin/target/release
    - name: Build Rapier Macos Universal
      shell: sh
      # we already built for x86_64-apple-darwin for mac, now build arm64
      if: ${{ inputs.arch == 'x86_64-apple-darwin'}}
      run: |
        mkdir -p rust/plugin/target/release
        rustup target add aarch64-apple-darwin
        cargo build --target=aarch64-apple-darwin --release
        lipo -create -output rust/plugin/target/release/libpatchwork_rust_core.dylib rust/plugin/target/aarch64-apple-darwin/release/libpatchwork_rust_core.dylib rust/plugin/target/x86_64-apple-darwin/release/libpatchwork_rust_core.dylib
    - name: Move Static Libs macOS
      shell: sh
      if: ${{ inputs.arch == 'x86_64-apple-darwin'}}
      run: |
        mv rust/plugin/target/x86_64-apple-darwin/release/libpatchwork_rust_core.a rust/plugin/target/release/libpatchwork_rust_core.x86_64.a
        mv rust/plugin/target/aarch64-apple-darwin/release/libpatchwork_rust_core.a rust/plugin/target/release/libpatchwork_rust_core.arm64.a
